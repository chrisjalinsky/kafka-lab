<configuration>
  <property>
    <name>dfs.replication</name>
    <value>{{ hadoop_dfs_replication }}</value>
  </property>
  {% if hadoop_node_type is defined and hadoop_node_type == "namenode" %}
  <property>
    <name>dfs.namenode.name.dir</name>
    <value>file://{{hadoop_dfs_name_dir}}</value>
  </property>
  <property>
    <name>dfs.namenode.rpc-bind-host</name>
    <value>{{ hadoop_dfs_rpc_bind_host }}</value>
    <description>
    The actual address the RPC server will bind to. If this optional address is
    set, it overrides only the hostname portion of dfs.namenode.rpc-address.
    It can also be specified per name node or name service for HA/Federation.
    This is useful for making the name node listen on all interfaces by
    setting it to 0.0.0.0.
    </description>
  </property>
  <property>
    <name>dfs.namenode.http-bind-host</name>
    <value>{{ hadoop_dfs_namenode_http_bind_host }}</value>
    <description>
    The actual adress the HTTP server will bind to. If this optional address
    is set, it overrides only the hostname portion of dfs.namenode.http-address.
    It can also be specified per name node or name service for HA/Federation.
    This is useful for making the name node HTTP server listen on all
    interfaces by setting it to 0.0.0.0.
    </description>
  </property>
  <property>
    <name>dfs.namenode.https-bind-host</name>
    <value>{{ hadoop_dfs_namenode_https_bind_host }}</value>
    <description>
    The actual adress the HTTPS server will bind to. If this optional address
    is set, it overrides only the hostname portion of dfs.namenode.https-address.
    It can also be specified per name node or name service for HA/Federation.
    This is useful for making the name node HTTPS server listen on all
    interfaces by setting it to 0.0.0.0.
    </description>
  </property>
  <property>
    <name>dfs.namenode.servicerpc-bind-host</name>
    <value>{{hadoop_dfs_svc_rpc_bind_host }}</value>
  </property>
  {% endif %}
  {% if hadoop_node_type is defined and hadoop_node_type == "datanode" %}
  <property>
    <name>dfs.datanode.data.dir</name>
    <value>file://{{hadoop_dfs_data_dir}}</value>
  </property>
  <property>
    <name>dfs.datanode.dns.interface</name>
    <value>{{ hadoop_dfs_datanode_iface }}</value>
  </property>
  {% endif %}
</configuration>
